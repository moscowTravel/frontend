{"version":3,"sources":["components/Common/Header/index.js","components/Home/WrapImage/index.js","components/Home/WrapFooter/index.js","store/actions/index.js","store/constants/index.js","components/Home/SelectCategories/withRedux.js","components/Home/SelectCategories/index.js","pages/Home/index.js","components/Map/Sidebar/index.js","pages/Map/index.js","pages/Map/withRedux.js","App.js","serviceWorker.js","store/reducers/index.js","store/index.js","index.js"],"names":["Header","window","location","href","className","onClick","e","onStartAgain","src","to","Component","WrapImage","WrapFooter","changePlaces","payload","type","withRedux","connect","dispatch","data","SelectCategories","state","museum","theater","culturalHeritage","viewingPlatforms","exhibitionHalls","botanicalGarden","prop","this","setState","fetch","json","jsonData","places","items","map","i","reverse","props","history","push","options","value","label","defaultValue","defaultInputValue","onChange","values","style","backgroundImage","changeCategoryStatus","icon","faCheck","sumbit","withRouter","HomePage","SidebarMap","horizontal","item","key","id","img","alt","name","category","userPosition","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","sort","p","Math","sqrt","slice","width","innerWidth","height","innerHeight","defaultState","center","zoom","preset","groupByCoordinates","geometry","App","exact","path","component","Home","MapPage","Boolean","hostname","match","initialState","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ab9b445.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nclass Header extends Component {\n\n\tonStartAgain() {\n\t\twindow.location.href = \"/\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"header\">\n\t\t\t\t<div className=\"header-cover\">\n\t\t\t\t\t<div className=\"header__logo\">\n\t\t\t\t\t\t<div onClick={e => this.onStartAgain()}>\n\t\t\t\t\t\t\t<img src=\"/frontend/logo.png\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header__menu\">\n\t\t\t\t\t\t<div className=\"menu__item\">\n\t\t\t\t\t\t\t<Link to=\"/map\">Карта</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"profile\">\n\t\t\t\t\t\t<div className=\"sign-up\">\n\t\t\t\t\t\t\t<a href='/'>Зарегистрироваться</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>)\n\t}\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nimport \"./index.scss\";\n\nclass WrapImage extends Component {\n\n    render() {\n        return (\n            <section className=\"wrap-image\">\n            </section>)\n    }\n}\n\nexport default WrapImage;","import React, { Component } from \"react\";\n\nimport \"./index.scss\";\n\nclass WrapFooter extends Component {\n\n    render() {\n        return (\n            <section className=\"wrap-footer\">\n            </section>)\n    }\n}\n\nexport default WrapFooter;","import * as types from '../constants/index'\n\nconst changePlaces = payload => ({\n    type: types.CHANGE_PLACES,\n    payload\n});\n\nexport {\n    changePlaces\n}","export const CHANGE_PLACES = \"CHANGE_PLACES\";","import {connect} from 'react-redux';\nimport {changePlaces} from '../../../store/actions/index';\n\nconst withRedux = (Component) => {\n\tconst mapStateToProps = () => ({});\n\n\tconst mapDispatchToProps = (dispatch) => ({\n\t\tchangePlaces: (data) => dispatch(changePlaces(data)),\n\t});\n\n\treturn connect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps,\n\t)(Component);\n};\n\nexport default withRedux;\n","import React, { Component } from \"react\";\n\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport \"./index.scss\";\nimport withRedux from \"./withRedux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SelectCategories extends Component {\n    state = {\n        museum: false,\n        theater: false,\n        culturalHeritage: false,\n        viewingPlatforms: false,\n        exhibitionHalls: false,\n        botanicalGarden: false\n    }\n\n    changeCategoryStatus(prop) {\n        this.setState({\n            [prop]: !this.state[prop]\n        })\n    }\n\n    async sumbit() {\n        const data = await fetch('/frontend/poi.json');\n        // const data = await fetch('/poi.json');\n        const jsonData = await data.json();\n        const places = jsonData.items.map(i => {\n            return {\n                ...i,\n                location: i.location.reverse()\n            }\n        });\n\n        this.props.changePlaces(places);\n        this.props.history.push(\"/map\");\n    }\n\n    render() {\n        return (\n            <section className=\"categories container\">\n                <div className=\"group-status\">\n                    <Select\n                        options={[{\n                            value: \"single\",\n                            label: \"В одиночку\"\n                        }, {\n                            value: \"withFamily\",\n                            label: \"С семьей\"\n                        }, {\n                            value: \"smallGroup\",\n                            label: \"Группой 5-7\"\n                        }]}\n                        defaultValue={\"single\"}\n                        defaultInputValue={\"В одиночку\"}\n                        onChange={(values) => { }}\n                    />\n                </div>\n                <div className=\"title\">\n                    <h2>Выберите предпочтения</h2>\n                </div>\n                <div className=\"grid\">\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/museum.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Музеи</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"museum\")\n                                }}\n                                className={this.state.museum ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/theater.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Театры</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"theater\")\n                                }}\n                                className={this.state.theater ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/culturalHeritage.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Культурное наследие</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"culturalHeritage\")\n                                }}\n                                className={this.state.culturalHeritage ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/viewingPlatforms.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Смотровые площадки</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"viewingPlatforms\")\n                                }}\n                                className={this.state.viewingPlatforms ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/exhibitionHalls.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Выставочные залы</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"exhibitionHalls\")\n                                }}\n                                className={this.state.exhibitionHalls ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"grid__item\">\n                        <div className=\"image\"\n                            style={{\n                                backgroundImage: `url('/frontend/home/categories/botanicalGarden.jpg')`\n                            }}></div>\n                        <div className=\"title\">\n                            <h3>Ботанические сады</h3>\n                        </div>\n                        <div className=\"status\">\n                            <button\n                                onClick={() => {\n                                    this.changeCategoryStatus(\"botanicalGarden\")\n                                }}\n                                className={this.state.botanicalGarden ? \"active\" : \"\"}>\n                                <FontAwesomeIcon icon={faCheck} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"submit\">\n                    <button onClick={() => this.sumbit()}>Продолжить</button>\n                </div>\n            </section>)\n    }\n}\n\nexport default withRouter(withRedux(SelectCategories));","import React, { Component } from \"react\";\n\nimport Header from \"../../components/Common/Header/index\";\nimport WrapImage from \"../../components/Home/WrapImage/index\";\nimport WrapFooter from \"../../components/Home/WrapFooter/index\";\nimport SelectCategories from \"../../components/Home/SelectCategories/index\"\n\nimport \"./index.scss\";\n\nclass HomePage extends Component {\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"home\">\n\t\t\t\t<Header />\n\t\t\t\t<main>\n\t\t\t\t\t<WrapImage />\n\t\t\t\t\t<SelectCategories />\n\t\t\t\t\t<WrapFooter />\n\t\t\t\t</main>\n\t\t\t</div>)\n\t}\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport Scroll from \"react-scrollbar\";\n\nimport \"./index.scss\";\n\nclass SidebarMap extends Component {\n\n    render() {\n        return (\n            <section className=\"sidebar\">\n                <div className=\"header\"></div>\n                <div className=\"main\">\n                    <Scroll\n                    horizontal={false}>\n                        <div className=\"list\">\n                            {\n                                this.props.items.map(item => {\n                                    return (\n                                        <div key={item.id} className=\"list__item\">\n                                            {item.img ? (<div className=\"image\" style={{\n                                                backgroundImage: item.img\n                                            }}>\n                                        </div>): (\n                                            <img src=\"/notFound.png\" alt=\"not found\" />\n                                        )}\n                                        \n                                        <div className=\"name\">\n                                            {item.name}\n                                        </div>\n                                        <div className=\"category\">\n                                            {item.category}\n                                        </div>\n                                    </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Scroll>\n                </div>\n            </section>)\n    }\n}\n\nexport default SidebarMap;","import React, { Component } from \"react\";\nimport { YMaps, Map, Placemark, Clusterer } from 'react-yandex-maps';\n\nimport Header from \"../../components/Common/Header/index\";\nimport MapSidebar from '../../components/Map/Sidebar/index';\n\nimport \"./index.scss\";\nimport withRedux from './withRedux';\n\nclass BusinessPlanPage extends Component {\n\n\tstate = {\n\t\tplaces: [],\n\t\tuserPosition: []\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tplaces: this.props.places\n\t\t});\n\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tthis.setState({\n\t\t\t\tuserPosition: [position.coords.latitude, position.coords.longitude]\n\t\t\t});\n\n\t\t\tthis.props.changePlaces(\n\t\t\t\tthis.state.places.sort(p => {\n\t\t\t\t\treturn Math.sqrt((p.location[0] - position.coords.latitude) ** 2 + (p.location[0] - position.coords.longitude) ** 2);\n\t\t\t\t}).slice(0, 6)\n\t\t\t)\n\t\t});\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"map\">\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"main\">\n\t\t\t\t\t<YMaps>\n\t\t\t\t\t\t<MapSidebar items={this.props.places} />\n\t\t\t\t\t\t<Map width={window.innerWidth - 5} height={window.innerHeight - 5}\n\t\t\t\t\t\t\tdefaultState={{ center: [55.75, 37.57], zoom: 12 }}>\n\n\t\t\t\t\t\t\t<Clusterer\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tpreset: 'islands#invertedVioletClusterIcons',\n\t\t\t\t\t\t\t\t\tgroupByCoordinates: false,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>{\n\t\t\t\t\t\t\t\t\tthis.props.places.map(i => {\n\t\t\t\t\t\t\t\t\t\treturn <Placemark key={i.id}\n\t\t\t\t\t\t\t\t\t\t\tgeometry={i.location}\n\t\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\t\tpreset: 'islands#circleIcon'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}</Clusterer>\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.userPosition ? (\n\t\t\t\t\t\t\t\t\t<Placemark geometry={this.state.userPosition} />)\n\t\t\t\t\t\t\t\t\t: (\"\")\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Map>\n\t\t\t\t\t</YMaps>\n\t\t\t\t</main>\n\t\t\t</div>)\n\t}\n}\n\nexport default withRedux(BusinessPlanPage);\n","import {connect} from 'react-redux';\nimport {changePlaces} from '../../store/actions/index';\n\nconst withRedux = (Component) => {\n\tconst mapStateToProps = (data) => ({\n        places: data.places\n\t});\n\t\n\tconst mapDispatchToProps = (dispatch) => ({\n\t\tchangePlaces: (data) => dispatch(changePlaces(data)),\n\t});\n\n\treturn connect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(Component);\n};\n\nexport default withRedux;\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home/index\";\nimport MapPage from \"./pages/Map/index\"\n\nimport './App.scss'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/map\" component={MapPage} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants/index';\n\nconst initialState = {\n    places: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.CHANGE_PLACES:\n            return {\n                ...state,\n                places: action.payload\n            };\n\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport  default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}